
SENTENCE


module.exports = (sequelize, DataTypes) => {
    const Sentence = sequelize.define('Sentence', {
        sentence: {
            type: DataTypes.TEXT,
            allowNull: false
        },
        is_sentence: {
            type: DataTypes.BOOLEAN,
            allowNull: false,
            defaultValue: true
        },
        pronounciation_url: {
            type: DataTypes.STRING
        },
        image_url: {
            type: DataTypes.STRING
        }
    }, {})

    const Lecture = sequelize.models.Lecture;

    Sentence.belongsToMany(Lecture, {
        through: 'LectureSentences'
    });
    Lecture.belongsToMany(Sentence, {
        through: 'LectureSentences'
    });

    return Sentence;
}


COMMENT

module.exports = async (sequelize, DataTypes) => {
    const Comment = await sequelize.define('Comment', {
        title: {
            type: DataTypes.STRING
        },
        description: {
            type: DataTypes.TEXT
        },
        user_id: {
            type: DataTypes.INTEGER,
            references: {
                model: sequelize.models.User,
                key: 'id'
            }
        },
        lecture_id: {
            type: DataTypes.INTEGER,
            references: {
                model: sequelize.models.Lecture,
                key: 'id'
            }
        },
    }, {})

    const User = sequelize.models.User;
    const Lecture = sequelize.models.Lecture;

    Comment.belongsTo(Lecture, {
        foreignKey: 'lecture_id',
        targetKey: 'id'
    });
    Lecture.hasMany(Comment, {
        foreignKey: 'lecture_id',
        sourceKey: 'id'
    });

    Comment.belongsTo(User, {
        foreignKey: 'user_id',
        targetKey: 'id'
    });
    User.hasMany(Comment, {
        foreignKey: 'user_id',
        sourceKey: 'id'
    });

    return Comment;
}

ACHIEVEMENT

module.exports = async (sequelize, DataTypes) => {
    const Achievement = await sequelize.define('Achievement', {
        name: {
            type: DataTypes.STRING
        },
        description: {
            type: DataTypes.TEXT
        },
        icon_url: {
            type: DataTypes.STRING
        }
    }, {})

    const User = sequelize.models.User;

    Achievement.belongsToMany(User, {
        through: 'AchievementUsers'
    });
    User.belongsToMany(Achievement, {
        through: 'AchievementUsers'
    });

    return Achievement;
}